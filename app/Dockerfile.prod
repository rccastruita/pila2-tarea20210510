# BUILDER

FROM python:3-alpine as builder

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev zlib-dev jpeg-dev
RUN apk add zlib jpeg libjpeg

RUN pip install --upgrade pip

RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401 .

COPY Pipfile Pipfile.lock /usr/src/app/
RUN pip install pipenv && pipenv lock -r > requirements.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

# FINAL

FROM python:3-alpine

RUN apk add --no-cache \
    jpeg-dev zlib-dev libmagic

RUN mkdir -p /home/app

RUN addgroup -S app && adduser -S app -G app

ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

RUN apk update \
    && apk add --no-cache libpq jpeg-dev zlib-dev libmagic
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

COPY . $APP_HOME

RUN chown -R app:app $APP_HOME

USER app